(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{493:function(t,v,_){"use strict";_.r(v);var e=_(0),a=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"一-幂等性介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一-幂等性介绍"}},[t._v("#")]),t._v(" 一.幂等性介绍")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("幂等性：就是用户对于同一操作发起的一次请求或者多次请求的结果是一致的，不会因为多次点击而产生了副作用。")])]),t._v(" "),_("li",[_("p",[t._v("幂等性举例：")]),t._v(" "),_("ol",[_("li",[t._v("博客系统同一个用户对同一个文章点赞，即使这人单身30年手速疯狂按点赞，那么实际上也只能给这个文章 +1 赞")]),t._v(" "),_("li",[t._v("在微信支付的时候，一笔订单应当只能扣一次钱，那么无论是网络问题或者bug等而重新付款，都只应该扣一次钱")])])])]),t._v(" "),_("br"),t._v(" "),_("h2",{attrs:{id:"二-http请求的幂等性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二-http请求的幂等性"}},[t._v("#")]),t._v(" 二.Http请求的幂等性")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("请求方式")]),t._v(" "),_("th",[t._v("幂等性")]),t._v(" "),_("th",[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("Get")]),t._v(" "),_("td",[t._v("幂等")]),t._v(" "),_("td",[t._v("Get 方法用于获取资源，不对系统资源进行改变，所以是幂等的")])]),t._v(" "),_("tr",[_("td",[t._v("Delete")]),t._v(" "),_("td",[t._v("幂等")]),t._v(" "),_("td",[t._v("Delete 方法用于删除资源，虽然改变了系统资源，但是第一次和第N次删除操作对系统的作用是相同的，所以是幂等的。")])]),t._v(" "),_("tr",[_("td",[t._v("Put")]),t._v(" "),_("td",[t._v("幂等/非幂等")]),t._v(" "),_("td",[t._v("如果修改的资源为固定的，比如说把账户中金额改为 1000 元，无论调用几次都是幂等的。假如资源不固定，比如账户中金额减少50元，调用一次和调用多次的结果肯定不一样，这时候就不幂等了。")])]),t._v(" "),_("tr",[_("td",[t._v("Post")]),t._v(" "),_("td",[t._v("非幂等")]),t._v(" "),_("td",[t._v("Post 请求用于创建新的资源，这意味着每次调用都会在系统中产生新的资源，所以该操作注定不是幂等操作。")])])])]),t._v(" "),_("br"),t._v(" "),_("h2",{attrs:{id:"二-幂等实现方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二-幂等实现方式"}},[t._v("#")]),t._v(" 二.幂等实现方式")]),t._v(" "),_("blockquote",[_("p",[t._v("因为Get请求和Delete请求都是天然幂等，我们只需要对Post请求和部分Put请求进行幂等设计。")])]),t._v(" "),_("br"),t._v(" "),_("h3",{attrs:{id:"幂等设计关键点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#幂等设计关键点"}},[t._v("#")]),t._v(" 幂等设计关键点")]),t._v(" "),_("ol",[_("li",[t._v("幂等键：调用端提供可用于幂等的唯一编码。")]),t._v(" "),_("li",[t._v("幂等设计：服务提供端使用幂等键做幂等设计。")])]),t._v(" "),_("h3",{attrs:{id:"服务提供端幂等设计"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务提供端幂等设计"}},[t._v("#")]),t._v(" 服务提供端幂等设计")]),t._v(" "),_("ol",[_("li",[t._v("分布式锁 ：针对幂等键用分布式锁，每次进入接口用幂等键加锁，保证同一时间只能进来一次。同时，服务端处理完可以加上一个以幂等键为key的分布式缓存。用于请求进来查缓存，处理过无需在处理。")]),t._v(" "),_("li",[t._v("状态标识：我们在进行数据库更新的时候加上个where条件，只有xxx状态的数据才允许更新。常用于状态流转数据，比如订单只能从付款完成状态变为通知库房拣货。加上状态相当于乐观锁机制。")]),t._v(" "),_("li",[t._v("唯一索引：为数据创建唯一索引，即使已经存储，再次存储会报错，这是利用数据库的特性来实现幂等。")])]),t._v(" "),_("p",[t._v("综上，在服务端我们可以使用 <用分布式锁 + 状态标识 + 数据库唯一索引> 这一套组合拳去做幂等设计。")])])}),[],!1,null,null,null);v.default=a.exports}}]);