(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{420:function(t,r,v){t.exports=v.p+"assets/img/redbag.9fd9cdb4.png"},421:function(t,r,v){t.exports=v.p+"assets/img/set.4ac7dc14.png"},422:function(t,r,v){t.exports=v.p+"assets/img/hash.49b7d35e.png"},423:function(t,r,v){t.exports=v.p+"assets/img/worker.03af1c65.png"},497:function(t,r,v){"use strict";v.r(r);var a=v(0),s=Object(a.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"一-红包业务概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-红包业务概述"}},[t._v("#")]),t._v(" 一.红包业务概述")]),t._v(" "),a("h3",{attrs:{id:"微信红包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#微信红包"}},[t._v("#")]),t._v(" 微信红包")]),t._v(" "),a("ol",[a("li",[t._v("首先，微信红包业务比普通商品“秒杀”有更海量的并发要求。")]),t._v(" "),a("li",[t._v("其次，微信红包业务要求更严格的安全级别。")])]),t._v(" "),a("h3",{attrs:{id:"业务总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#业务总结"}},[t._v("#")]),t._v(" 业务总结")]),t._v(" "),a("ol",[a("li",[t._v("领域：特色秒杀。")]),t._v(" "),a("li",[t._v("业务特点：量大、安全性要求高。")])]),t._v(" "),a("h3",{attrs:{id:"技术难点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#技术难点"}},[t._v("#")]),t._v(" 技术难点")]),t._v(" "),a("ol",[a("li",[t._v("并发请求抢锁，数据库减库存的时候会抢锁。")]),t._v(" "),a("li",[t._v("事务更加严格，由于业务需求不同，没办法异步，也不能超卖。")])]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"二-红包逻辑梳理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-红包逻辑梳理"}},[t._v("#")]),t._v(" 二.红包逻辑梳理")]),t._v(" "),a("h3",{attrs:{id:"包红包-发红包-抢红包-拆红包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包红包-发红包-抢红包-拆红包"}},[t._v("#")]),t._v(" 包红包-> 发红包 -> 抢红包 -> 拆红包")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("包红包：系统给每个红包分配一个唯一ID，也就是发红包的订单号，然后将红包发送给用户，红包的个数，红包金额写入到存储。")])]),t._v(" "),a("li",[a("p",[t._v("发红包：用户使用微信支付完成付款，微信红包后台收到微信支付成功的通知。红包系统将红包发送订单状态更新，更新为用户已支付，并写入用户发红包记录表，这样用户可以在钱包中找到用户的发红包流水和收发红包的记录，之后微信红包系统调用微信通知，将微信红包信息发送到微信群。")])]),t._v(" "),a("li",[a("p",[t._v("抢红包：微信群中的用户收到红包消息之后，点开红包，开始抢红包，这个过程微信红包系统会检查红包是否已经被抢完，是否已经过期，是否已经抢过等验证逻辑。")])]),t._v(" "),a("li",[a("p",[t._v("拆红包：拆红包是整个发红包流程最复杂的一个操作，需要查询这个红包的红包订单，判断用户是否可以拆包，计算本次可拆到的红包金额。记录抢红包流水。")])])]),t._v(" "),a("p",[a("img",{attrs:{src:v(420),alt:"redbag"}})]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"三-方案设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-方案设计"}},[t._v("#")]),t._v(" 三.方案设计")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("垂直切分：接入层垂直切分，根据红包ID，发红包、抢红包、拆红包、查详情详情等等都在同一台机器上处理，互不影响，分而治之。")])]),t._v(" "),a("li",[a("p",[t._v("进行排队：请求进行排队，到数据库的时候是串行的，就不涉及抢锁的问题了。")])]),t._v(" "),a("li",[a("p",[t._v("缓存控制：为了防止队列太长过载导致队列被降级，直接打到数据库上，所以数据库前面再加上一个缓存，用CAS自增控制并发，太高的并发直接返回失败。")])]),t._v(" "),a("li",[a("p",[t._v("冷热分离：红包冷热数据分离，按时间分表。（设置缓存为一天，查询缓存没有则过期，缓存数据为0则抢完）")])])]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"四-方案具体描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-方案具体描述"}},[t._v("#")]),t._v(" 四.方案具体描述")]),t._v(" "),a("h3",{attrs:{id:"set化解决海量数据事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set化解决海量数据事务"}},[t._v("#")]),t._v(" SET化解决海量数据事务")]),t._v(" "),a("p",[t._v("微信红包用户发一个红包时，微信红包系统生成一个 ID 作为这个红包的唯一标识。接下来这个红包的所有发红包、抢红包、拆红包、查询红包详情等操作，都根据这个 ID 关联。")]),t._v(" "),a("p",[t._v("红包系统根据这个红包 ID，按一定的规则（如按 ID 尾号取模等），垂直上下切分。切分后，一个垂直链条上的逻辑 Server 服务器、DB 统称为一个 SET。")]),t._v(" "),a("p",[t._v("各个 SET 之间相互独立，互相解耦。并且同一个红包 ID 的所有请求，包括发红包、抢红包、拆红包、查详情详情等，垂直 stick 到同一个 SET 内处理，高度内聚。通过这样的方式，系统将所有红包请求这个巨大的洪流分散为多股小流，互不影响，分而治之，如下图所示。\n"),a("img",{attrs:{src:v(421),alt:"set"}})]),t._v(" "),a("br"),t._v(" "),a("h3",{attrs:{id:"逻辑server层请求排队解决db并发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑server层请求排队解决db并发"}},[t._v("#")]),t._v(" 逻辑Server层请求排队解决DB并发")]),t._v(" "),a("p",[t._v("红包系统是资金交易系统，DB 操作的事务性无法避免，所以会存在“并发抢锁”问题。但是如果到达 DB 的事务操作（也即拆红包行为）不是并发的，而是串行的，就不会存在“并发抢锁”的问题了。")]),t._v(" "),a("p",[t._v("按这个思路，为了使拆红包的事务操作串行地进入 DB，只需要将请求在 Server 层以 FIFO（先进先出）的方式排队，就可以达到这个效果。从而问题就集中到 Server 的 FIFO 队列设计上。")]),t._v(" "),a("p",[t._v("微信红包系统设计了分布式的、轻巧的、灵活的 FIFO 队列方案。其具体实现如下：")]),t._v(" "),a("p",[t._v("首先，将同一个红包 ID 的所有请求 stick 到同一台 Server。")]),t._v(" "),a("p",[t._v("上面 SET 化方案已经介绍，同个红包 ID 的所有请求，按红包 ID stick 到同个 SET 中。不过在同个 SET 中，会存在多台 Server 服务器同时连接同一台 DB（基于容灾、性能考虑，需要多台 Server 互备、均衡压力）。")]),t._v(" "),a("p",[t._v("为了使同一个红包 ID 的所有请求，stick 到同一台 Server 服务器上，在 SET 化的设计之外，微信红包系统添加了一层基于红包 ID hash 值的分流，如下图所示。\n"),a("img",{attrs:{src:v(422),alt:"hash"}})]),t._v(" "),a("p",[t._v("其次，设计单机请求排队方案。")]),t._v(" "),a("p",[t._v("将 stick 到同一台 Server 上的所有请求在被接收进程接收后，按红包 ID 进行排队。然后串行地进入 worker 进程（执行业务逻辑）进行处理，从而达到排队的效果，如下图所示。")]),t._v(" "),a("p",[a("img",{attrs:{src:v(423),alt:"worker"}})]),t._v(" "),a("p",[t._v("最后，增加 Redis 控制并发。")]),t._v(" "),a("p",[t._v("为了防止 Server 中的请求队列过载导致队列被降级，从而所有请求拥进 DB，系统增加了与 Server 服务器同机部署的 memcached，用于控制拆同一个红包的请求并发数。")]),t._v(" "),a("p",[t._v("具体来说，利用 memcached 的 CAS 原子累增操作，控制同时进入 DB 执行拆红包事务的请求数，超过预先设定数值则直接拒绝服务。用于 DB 负载升高时的降级体验。")]),t._v(" "),a("p",[t._v("通过以上三个措施，系统有效地控制了 DB 的“并发抢锁”情况。")]),t._v(" "),a("br"),t._v(" "),a("h3",{attrs:{id:"冷热数据分离保障db稳定性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#冷热数据分离保障db稳定性"}},[t._v("#")]),t._v(" 冷热数据分离保障DB稳定性")]),t._v(" "),a("p",[t._v("随着红包数量越来越大，单表数据也逐渐增加，DB性能和单表数据量有一定相关性，当单表数据量达到一定程度后，DB性能大幅度下降，影响系统性能稳定性，采用冷热分离，将历史数据和热数据分开存储。比如可以按照天纬度分库分表逻辑，按照31天分。")]),t._v(" "),a("br"),t._v(" "),a("blockquote",[a("p",[t._v("参考：")])]),t._v(" "),a("ul",[a("li",[t._v("https://www.infoq.cn/article/2017hongbao-weixin/")]),t._v(" "),a("li",[t._v("https://cloud.tencent.com/developer/article/1637408")])])])}),[],!1,null,null,null);r.default=s.exports}}]);